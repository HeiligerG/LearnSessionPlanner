version: '3.9'

services:
  postgres:
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Don't expose port externally in production
    ports: []
    # Use Docker secrets for sensitive data
    secrets:
      - postgres_user
      - postgres_password
    # Override environment with secrets
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: production
    # Production-specific environment
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      JWT_REFRESH_SECRET_FILE: /run/secrets/jwt_refresh_secret
    secrets:
      - jwt_secret
      - jwt_refresh_secret
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    # Don't expose port externally (only via internal network)
    ports: []

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: production
      args:
        VITE_API_URL: ${VITE_API_URL}
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: lsp-nginx
    restart: unless-stopped
    depends_on:
      - api
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - lsp-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

secrets:
  postgres_user:
    external: true
  postgres_password:
    external: true
  jwt_secret:
    external: true
  jwt_refresh_secret:
    external: true
